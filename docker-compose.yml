services:
  subscriber:
    build: .
    volumes:
      - ./logs:/app/logs  # Mount the logs directory as before
      - ./app/config.yaml:/app/config.yaml  # Mount config.yaml as a file, not a directory
    environment:
      - windspeedTrigger=5.0
      - interval=15
      - timesBelowLimit=10 # = value * interval [sec], e.g.: (120sec * 10) / 60 = 20min
      - timesAboveLimit=90 # = value * interval [sec], e.g.: (120sec * 90) / 3600 = 3h
      - mongohost=host.docker.internal
      - mongoport=27017
      - logLevel=20
    command: python /app/startup.py
    restart: always

  flask-api:
    build: .
    ports: 
      - 5050:5050
    command: python /app/api.py
    environment:
      - mongohost=host.docker.internal
      - mongoport=27017
    restart: always

  mongo:
    image: mongo:latest
    restart: always
    container_name: mongo-ws
    command: ["mongod", "--auth"]  # Enforce authentication
    ports:
      - 27017:27017
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.runCommand('ping').ok"]
      interval: 10s    # Check every 10 seconds
      timeout: 5s      # Fail if no response within 5 seconds
      retries: 5       # Retry 5 times before marking as unhealthy
      start_period: 30s  # Give MongoDB 30s to start before health checks begin
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: Windseeker   
    volumes:
      - /d/Docker/windseeker/mongo-data:/data/db:rw

volumes:
  mongo-data:
