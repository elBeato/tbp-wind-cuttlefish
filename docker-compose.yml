services:
  subscriber:
    build: .
    volumes:
      - ./logs:/app/logs  # Mount the logs directory as before
      - ./app/config.yaml:/app/config.yaml  # Mount config.yaml as a file, not a directory
    command: python /project-root/app/startup.py # project-root/app/... doesn't work, /project-root/app/... is correct
    environment:
      - INTERVAL=${INTERVAL}
      - TIMES_BELOW_LIMIT=${TIMES_BELOW_LIMIT} # = value * interval [sec], e.g.: (120sec * 10) / 60 = 20min
      - TIMES_ABOVE_LIMIT=${TIMES_ABOVE_LIMIT} # = value * interval [sec], e.g.: (120sec * 90) / 3600 = 3h
      - MONGO_HOST=${MONGO_HOST}
      - MONGO_PORT=${MONGO_PORT}
      - MONGO_USERNAME=${MONGO_USERNAME}
      - MONGO_PASSWORD=${MONGO_PASSWORD}
      - GOOGLE_APP_PASSWORD=${GOOGLE_APP_PASSWORD}
      - LOG_LEVEL=20
    restart: always

  flask-api:
    build: .
    ports: 
      - "5050:5050"
    command: python /project-root/app/api.py
    environment:
      - MONGO_HOST=mongo-ws
      - MONGO_PORT=27017
      - MONGO_USERNAME=${MONGO_USERNAME}
      - MONGO_PASSWORD=${MONGO_PASSWORD}
      - GOOGLE_APP_PASSWORD=${GOOGLE_APP_PASSWORD}
      - LOG_LEVEL=20
    restart: always

  windguru-online-stations:
    build: .
    command: python /project-root/app/stations.py
    environment:
      - MONGO_HOST=mongo-ws
      - MONGO_PORT=27017
      - MONGO_USERNAME=${MONGO_USERNAME}
      - MONGO_PASSWORD=${MONGO_PASSWORD}
      - MIN_STATION_NUMBER=1200
      - MAX_STATION_NUMBER=2000
      - LOG_LEVEL=20
    restart: always

  mongo:
    image: mongo:latest
    restart: always
    container_name: mongo-ws
    command: ["mongod", "--auth"]  # Enforce authentication
    ports:
      - "27017:27017"
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.runCommand('ping').ok"]
      interval: 10s    # Check every 10 seconds
      timeout: 5s      # Fail if no response within 5 seconds
      retries: 5       # Retry 5 times before marking as unhealthy
      start_period: 30s  # Give MongoDB 30s to start before health checks begin
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: Windseeker   
    volumes:
      - /c/Docker/windseeker/mongo-data:/data/db:rw

volumes:
  mongo-data:
